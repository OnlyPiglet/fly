package bytestools

import (
	"fmt"
	"testing"
)

func TestCalculateChecksumTest(t *testing.T) {
	data := []byte{0x00, 0x53, 0x04, 0x01, 0x01, 0x10, 0x01, 0x0a, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x01, 0x03, 0x10, 0x38, 0x41, 0x00, 0x90, 0x00, 0x00, 0x61, 0x0a, 0x01, 0x04, 0x31, 0x36, 0x35, 0x2e, 0x33, 0x2e, 0x31, 0x31, 0x03, 0x01, 0x05, 0x1f, 0x16, 0x01, 0x48, 0x38, 0x39, 0x38, 0x36, 0x30, 0x34, 0x41, 0x31, 0x31, 0x39, 0x32, 0x34, 0x44, 0x30, 0x30, 0x35, 0x39, 0x35, 0x37, 0x35, 0x04, 0x02, 0x01, 0x97, 0x40, 0x04, 0x02, 0x01, 0x98, 0x20, 0x04, 0x02, 0x01, 0x99, 0x27}

	checksum := CalculateChecksum(data)
	fmt.Printf("累加和（十进制）: %d\n", checksum)
	fmt.Printf("累加和（十六进制）: 0x%02x\n", checksum)
}

func TestASCIIStringToBytes(t *testing.T) {
	a := "123123"
	bytes := ASCIIStringToBytes(a)
	println(BytesToASCIIString(bytes))
}
