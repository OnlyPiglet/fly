package cryptools

import (
	"encoding/base64"
	"testing"
)

func TestName(t *testing.T) {
	GenerateRsaKey(4096, "./pri.pem", "./pub.pem")
	file := RsaEncryptFile([]byte("123123"), "./pub.pem")
	ss := RsaDecryptFile(file, "./pri.pem")
	println(string(ss))
}

var Pub = "-----BEGIN rsa public key-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAw7RtqWNVNKnaWWhEyhng\n+TRK1wENm+sS/3gYU4Rk8zFBhmK+QqC8zeQdsJMK0+S/vdmYB3Rs160ABjTfD6s8\nY2bj79IODdjZWrc7XyYPh1Z01E078VjNUEXcSg+fFyk2mdlb/NY1vkPFyJmlH0wb\nfrrlM5FOAK4D26wHvniEOmZjNUIpcybR1XuOiiDRG+wTMJT79ob0HnD9LzC6CwQc\ngnDdYEfWwWxus6yCawIkKrAJJSeJN9tjkdLp4AjvpfGrYyBESKrr7mdwjyvVoppt\nWq6KoTnJeM7I5B9MTBuITfACmL3FK4Fx2UA3BpAxAtJGtkOpIjcS9FF7DMZwEuzB\nqfoOjH2PKE7SXU9rBuNj+QJSOQf47UQ+S3gg0NQMTo7nab3KokniSwcNrMaYKApw\nguYsC+4xkB1Va62nkMVAexbBxUxMItxx1qH+vEbo6uDKBI/tFZoUWoyMuN0usbYS\npS40VJuaHy30nz/62rmNR4I2brHQfCpwXthvH57UOdrpQebcPp3d7TUBXiDT7d5W\n9QBZj/gKxEow6K/08gyrR1sTFJFmO4qBeWppdYlF0r2S1+ryt1Cte60c5K4ez1/1\ng/qfrNT1yX5IUbaAj3tGoqGNf5KkxelxxYREgnUm67d8JzeY75nbDo1cCu8sJpio\nJZKJvreeZIHZIDLegtqjHxMCAwEAAQ==\n-----END rsa public key-----\n"
var Pri = "-----BEGIN rsa private key-----\n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\n-----END rsa private key-----\n"

func TestDS(t *testing.T) {
	encrypt := RsaEncrypt([]byte("123123"), []byte(Pub))
	decrypt := RsaDecrypt(encrypt, []byte(Pri))
	println(string(decrypt))
}

func TestAesEncrypt(t *testing.T) {
	key := []byte("Ashaushajshua@23")
	content := "{\"username\":\"admin\",\"password\":\"oeXcmq\"}"
	encrypt := AesEcbEncrypt([]byte(content), key)
	miwen := base64.StdEncoding.EncodeToString(encrypt)
	println(miwen)

	mingwen, _ := base64.StdEncoding.DecodeString("9dfFNfn1J1EYkIfNQ1uG9Djp4BTatKsLYzn/R3I/GmaF7MLmLn/xwMcJpbtfV3RqhaRS1uUK5l4X019Ac+/hikZHhUNJ6OSo1wJIxkKMhIZFsWPA9SaRnebH1qsJeLZJzEhhEQ00MTgZuZJ+0MpsXqYirjbHRK7QPGxOWUfmd1RU/CpGUQSZeRvyZ4oR6Gl7+YC5sizU/Vq59TkU/Zs4QZExKRBWoR/I/TtHYTfcBCzEdBBhE4U9uxyQwLcMFjv/UODmxoOwy0b2T4UHdJKPiKdHcawgvsfK0R43qzAffASdXCpPqXvfVoj3WO3E8RqY")

	decrypt := AesEcbDecrypt(mingwen, key)
	println(string(decrypt))

}
